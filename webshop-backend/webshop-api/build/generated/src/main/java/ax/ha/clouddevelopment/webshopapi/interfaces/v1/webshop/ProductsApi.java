/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ax.ha.clouddevelopment.webshopapi.interfaces.v1.webshop;

import ax.ha.clouddevelopment.webshopapi.interfaces.v1.webshop.model.Product;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-01-17T01:38:18.470939900+02:00[Europe/Kiev]")

@Validated
@Api(value = "products", description = "the products API")
public interface ProductsApi {

    /**
     * GET /products/{productId} : Retrieve a single product
     *
     * @param productId ID of the product (required)
     * @return Products response (status code 200)
     */
    @ApiOperation(value = "Retrieve a single product", nickname = "getProduct", notes = "", response = Product.class, tags={ "Product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Products response", response = Product.class) })
    @RequestMapping(value = "/products/{productId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Product> getProduct(@ApiParam(value = "ID of the product",required=true) @PathVariable("productId") UUID productId);


    /**
     * PUT /products/{productId} : Update a product
     *
     * @param productId ID of the product (required)
     * @param product  (required)
     * @return Products response (status code 200)
     */
    @ApiOperation(value = "Update a product", nickname = "updateProduct", notes = "", response = Product.class, tags={ "Products", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Products response", response = Product.class) })
    @RequestMapping(value = "/products/{productId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Product> updateProduct(@ApiParam(value = "ID of the product",required=true) @PathVariable("productId") UUID productId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody Product product);

}
