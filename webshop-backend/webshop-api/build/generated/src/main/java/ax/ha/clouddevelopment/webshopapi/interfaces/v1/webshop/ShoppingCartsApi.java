/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ax.ha.clouddevelopment.webshopapi.interfaces.v1.webshop;

import ax.ha.clouddevelopment.webshopapi.interfaces.v1.webshop.model.ShoppingCart;
import java.util.UUID;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-01-17T01:38:18.470939900+02:00[Europe/Kiev]")

@Validated
@Api(value = "shoppingCarts", description = "the shoppingCarts API")
public interface ShoppingCartsApi {

    /**
     * GET /shoppingCarts/{shoppingCartId} : Retrieve a single shoppingCart
     *
     * @param shoppingCartId ID of the shoppingCart (required)
     * @return ShoppingCarts response (status code 200)
     */
    @ApiOperation(value = "Retrieve a single shoppingCart", nickname = "getShoppingCarts", notes = "", response = ShoppingCart.class, tags={ "ShoppingCart", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "ShoppingCarts response", response = ShoppingCart.class) })
    @RequestMapping(value = "/shoppingCarts/{shoppingCartId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ShoppingCart> getShoppingCarts(@ApiParam(value = "ID of the shoppingCart",required=true) @PathVariable("shoppingCartId") UUID shoppingCartId);


    /**
     * PUT /shoppingCarts/{shoppingCartId} : Update a shoppingCart
     *
     * @param shoppingCartId ID of the shoppingCart (required)
     * @param shoppingCart  (required)
     * @return ShoppingCarts response (status code 200)
     */
    @ApiOperation(value = "Update a shoppingCart", nickname = "updateShoppingCart", notes = "", response = ShoppingCart.class, tags={ "ShoppingCarts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "ShoppingCarts response", response = ShoppingCart.class) })
    @RequestMapping(value = "/shoppingCarts/{shoppingCartId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<ShoppingCart> updateShoppingCart(@ApiParam(value = "ID of the shoppingCart",required=true) @PathVariable("shoppingCartId") UUID shoppingCartId,@ApiParam(value = "" ,required=true )  @Valid @RequestBody ShoppingCart shoppingCart);

}
